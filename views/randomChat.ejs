<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>room</title>
    <link rel="stylesheet" href="../css/randomChat.css">

  </head>

  <body>
    <header>
      <h2>Jab We Talk</h2>
      <ul>
        
        <li><a href="/randomChat" id="chatOption">End Chat</a></li>
      </ul>
    </header>
    <main>
      <div id="notificationBar"></div>

      <div id="displayMsg"></div>
    </main>
    <footer>
          <!-- From Uiverse.io by vinodjangid07 --> 
<div class="messageBox">
    <div class="fileUploadWrapper">
      <label for="file">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 337 337">
          <circle
            stroke-width="20"
            stroke="#6c6c6c"
            fill="none"
            r="158.5"
            cy="168.5"
            cx="168.5"
          ></circle>
          <path
            stroke-linecap="round"
            stroke-width="25"
            stroke="#6c6c6c"
            d="M167.759 79V259"
          ></path>
          <path
            stroke-linecap="round"
            stroke-width="25"
            stroke="#6c6c6c"
            d="M79 167.138H259"
          ></path>
        </svg>
        <span class="tooltip">Add an image</span>
      </label>
      <input type="file" id="file" name="file" />

      <input required="" placeholder="Message..." type="text" class="messageInput" id="inputMsg" maxlength="256" />

    </div>


    <button class="sendButton" id="btn">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 664 663">
        <path
          fill="none"
          d="M646.293 331.888L17.7538 17.6187L155.245 331.888M646.293 331.888L17.753 646.157L155.245 331.888M646.293 331.888L318.735 330.228L155.245 331.888"
        ></path>
        <path
          stroke-linejoin="round"
          stroke-linecap="round"
          stroke-width="33.67"
          stroke="#6c6c6c"
          d="M646.293 331.888L17.7538 17.6187L155.245 331.888M646.293 331.888L17.753 646.157L155.245 331.888M646.293 331.888L318.735 330.228L155.245 331.888"
        ></path>
      </svg>
    </button>
  </div>

    </footer>
    <script src="socket.io/socket.io.js"></script>
    <script>
    const socket = io()

    const msgInput = document.querySelector("#inputMsg")
      const button = document.querySelector("#btn")
      const displayMsg = document.querySelector("#displayMsg")
      const notificationBar = document.querySelector("#notificationBar")
      const chatOption = document.querySelector("#chatOption")
      const user = <%- JSON.stringify(user) %>;
      let sendersName = null ;
      
      let room = null;
      socket.emit("joined-randomChat", {user})

      socket.on("waitingForPerson" , ()=>{
        displayMsg.innerHTML = "<p class='updateConnectionStatus'>waiting for user to connect</p>"
      })
      socket.on("newUserJoinedMessage", ({name ,roomm}) => {
        console.log(name)
          displayMsg.innerHTML = `<p class='updateConnectionStatus'>you are connected to ${name}</p>`
          room = roomm;
          
          sendersName = name
      })

      button.addEventListener("click", sendBtnClicked)

      function sendBtnClicked() {
          const msgToSend = msgInput.value;
          const now = new Date();
          const hours = now.getHours();
          const minutes = now.getMinutes();
          const time = `${hours}:${minutes}`
          if (!msgToSend) {
              return
          }
         
          socket.emit("sendMessageRandomChat", { room, message: msgToSend,time })
          displayMsg.innerHTML += `<div class="wrapper wrapperSelf">
              <div class="userMsgBlock userMsgBlockSelf" >
          <div class="userMsgBlockName">${user.name}</div>

          <div class="userMsgBlockMsg">${msgToSend}</div>
          <div class="userMsgBlockTime">${time} <div class="msgStatus"></div></div>

          </div>
          </div>`

          displayMsg.scrollTop = displayMsg.scrollHeight;
          msgInput.value = ''
      }

      let isKeyPressed = false;

      window.addEventListener("keydown", (event) => {
          if (event.key === "Enter" && !isKeyPressed) {
              isKeyPressed = true; // Mark key as pressed
              sendBtnClicked();
          }
      });

      window.addEventListener("keyup", (event) => {
          if (event.key === "Enter") {
              isKeyPressed = false; // Reset key press state
          }
      });

      socket.on("recivedMessageRandomChat", ({ message,time}) => {
        console.log("send message")
        console.log(message)
          displayMsg.innerHTML += `<div class="wrapper ">
              <div class="userMsgBlock " >
          <div class="userMsgBlockName">${sendersName}</div>
          <div class="userMsgBlockMsg">${message}</div>
          <div class="userMsgBlockTime">${time}</div>
          </div>
          </div>`

          displayMsg.scrollTop = displayMsg.scrollHeight;

          socket.emit("messageStatusSeen", { room, messageId, userId})
      })

      socket.on("userLeftChat" , ()=>{
        displayMsg.innerHTML += `<p class='updateConnectionStatus'>user left chat , <a href="/randomChat">start new chat<a></p>`
            displayMsg.scrollTop = displayMsg.scrollHeight;
            chatOption.innerHTML = "start new chat"
      })

        let typingTimeout;
        window.addEventListener("keypress", () => {
        socket.emit("someoneIsTypingAtRandomChat", room)
        clearTimeout(typingTimeout);

        typingTimeout = setTimeout(() => {
            socket.emit("stoppedTypingAtRandomChat", room);
            }, 2000);
        })

      socket.on("TheyAreTyping", () => {
          notificationBar.innerHTML = `<p> <b>${sendersName}</b> is typing...<p>`

      })

      socket.on("stoppedTyping", () => {
          notificationBar.innerHTML = "";
      });
    
    </script>
  </body>
</html>
